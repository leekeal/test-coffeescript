// Generated by CoffeeScript 1.6.3
(function() {
  var formidable, fs, queryString, url;

  queryString = require("querystring");

  fs = require("fs");

  formidable = require("formidable");

  url = require("url");

  /*　開始の処理する関数*/


  exports.start = function(response) {
    var body;
    console.log("start was called");
    body = '<html>' + '<head>' + '<meta http-equiv="Content-Type" content="text/html; ' + 'charset=UTF-8" />' + '</head>' + '<body>' + '<form action="/upload" method="post" enctype="multipart/form-data">' + '<input type="file" name="upload">' + '<input type="submit" value="Upload file" />' + '</form>' + '</body>' + '</html>';
    response.writeHead(200, {
      "Content-Type": "text/html"
    });
    response.write(body);
    return response.end();
  };

  /*　アップロードしたデータを処理する関数*/


  exports.upload = function(response, request) {
    var form;
    console.log("Request handler 'upload' was called.");
    if (request.method.toLowerCase() === 'post') {
      form = new formidable.IncomingForm();
      form.parse(request, function(error, fields, files) {
        fs.renameSync(files.upload.path, "upload/" + files.upload.name);
        return console.log(files.upload.name + "を保存しました");
      });
      response.writeHead(200, {
        "Content-Type": "text/html"
      });
      response.write("received image:<br/>");
      return fs.readdir("upload/", function(error, files) {
        var file, _i, _len;
        if (error) {
          console.log("read dir error");
        } else {
          for (_i = 0, _len = files.length; _i < _len; _i++) {
            file = files[_i];
            response.write("<img src='/image?filename=" + file + "'/>");
          }
        }
        /*  
        因为nodejs是异步,如果不把response.end放在readdir里面,
        readdir执行后马上执行response.end, 就会导致循环里的输出不能写到response里面
        */

        return response.end();
      });
    } else {
      response.writeHead(500, {
        "Content-Type": "text/plain"
      });
      response.write('アップロードするファイルを選んでいます');
      return response.end();
    }
  };

  exports.image = function(response, request) {
    var fileName, urlParsed;
    console.log("Request handler 'show' was called");
    urlParsed = url.parse(request.url);
    fileName = queryString.parse(urlParsed.query).filename;
    return fs.readFile("upload/" + fileName, "binary", function(error, file) {
      if (error) {
        response.writeHead(500, {
          "Content-Type": "text/plain"
        });
        response.write(error + "\n");
        return response.end();
      } else {
        response.writeHead(200, {
          "Content-Type": "image/png"
        });
        response.write(file, "binary");
        return response.end();
      }
    });
  };

}).call(this);
